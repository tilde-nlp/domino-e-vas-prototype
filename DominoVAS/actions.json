{"sendadaptivecarditems":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"const adaptiveCard ={\\n    \\\"type\\\": \\\"AdaptiveCard\\\",\\n    \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\",\\n    \\\"version\\\": \\\"1.1\\\",\\n    \\\"body\\\": [\\n        {\\n            \\\"type\\\": \\\"TextBlock\\\",\\n            \\\"text\\\": \\\"Select an item to view the image, details, and obtain link\\\",\\n            \\\"wrap\\\": true,\\n            \\\"weight\\\": \\\"Bolder\\\",\\n            \\\"size\\\": \\\"Medium\\\"\\n        },\\n        {\\n            \\\"type\\\": \\\"Container\\\",\\n            \\\"items\\\": [\\n                {\\n                    \\\"type\\\": \\\"ActionSet\\\",\\n                    \\\"actions\\\": [\\n                        {\\n                            \\\"type\\\": \\\"Action.ShowCard\\\",\\n                            \\\"title\\\": \\\"Item 1\\\",\\n                            \\\"card\\\": {\\n                                \\\"type\\\": \\\"AdaptiveCard\\\",\\n                                \\\"body\\\": [\\n                                    {\\n                                        \\\"type\\\": \\\"Image\\\",\\n                                        \\\"url\\\": \\\"https://catalogue.dataspace.copernicus.eu/odata/v1/Assets(40d5c4dd-af39-4505-bda0-e5f710457417)/$value\\\",\\n                                        \\\"altText\\\": \\\"Image 1\\\"\\n                                    },\\n                                    {\\n                                        \\\"type\\\": \\\"TextBlock\\\",\\n                                        \\\"text\\\": \\\"Properties:\\\",\\n                                        \\\"wrap\\\": true,\\n                                        \\\"weight\\\": \\\"Bolder\\\"\\n                                    },\\n                                    {\\n                                        \\\"type\\\": \\\"FactSet\\\",\\n                                        \\\"facts\\\": [\\n                                            { \\\"title\\\": \\\"Timeliness:\\\", \\\"value\\\": \\\"Fast-24h\\\" },\\n                                            { \\\"title\\\": \\\"Coordinates:\\\", \\\"value\\\": \\\"57.785843,20.116644 58.212681,24.484545 56.602947,24.938770 56.182392,20.758526 57.785843,20.116644\\\" },\\n                                            { \\\"title\\\": \\\"Orbit Number:\\\", \\\"value\\\": \\\"26453\\\" },\\n                                            { \\\"title\\\": \\\"Slice Number:\\\", \\\"value\\\": \\\"20\\\" },\\n                                            { \\\"title\\\": \\\"Product Class:\\\", \\\"value\\\": \\\"S\\\" },\\n                                            { \\\"title\\\": \\\"Orbit Direction:\\\", \\\"value\\\": \\\"ASCENDING\\\" },\\n                                            { \\\"title\\\": \\\"Operational Mode:\\\", \\\"value\\\": \\\"IW\\\" },\\n                                            { \\\"title\\\": \\\"Processing Level:\\\", \\\"value\\\": \\\"LEVEL1\\\" },\\n                                            { \\\"title\\\": \\\"Swath Identifier:\\\", \\\"value\\\": \\\"IW1 IW2 IW3\\\" },\\n                                            { \\\"title\\\": \\\"Platform Short Name:\\\", \\\"value\\\": \\\"SENTINEL-1\\\" },\\n                                            { \\\"title\\\": \\\"Instrument Short Name:\\\", \\\"value\\\": \\\"SAR\\\" },\\n                                            { \\\"title\\\": \\\"Relative Orbit Number:\\\", \\\"value\\\": \\\"131\\\" },\\n                                            { \\\"title\\\": \\\"Polarisation Channels:\\\", \\\"value\\\": \\\"VV&VH\\\" },\\n                                            { \\\"title\\\": \\\"Platform Serial Identifier:\\\", \\\"value\\\": \\\"A\\\" },\\n                                            { \\\"title\\\": \\\"Datetime:\\\", \\\"value\\\": \\\"2019-03-22T16:12:17.923000Z\\\" },\\n                                            { \\\"title\\\": \\\"End Datetime:\\\", \\\"value\\\": \\\"2019-03-22T16:12:44.886000Z\\\" },\\n                                            { \\\"title\\\": \\\"Start Datetime:\\\", \\\"value\\\": \\\"2019-03-22T16:12:17.923000Z\\\" },\\n                                            { \\\"title\\\": \\\"Product Type:\\\", \\\"value\\\": \\\"IW_SLC__1S\\\" }\\n                                        ]\\n                                    },\\n                                    {\\n                                        \\\"type\\\": \\\"ActionSet\\\",\\n                                        \\\"actions\\\": [\\n                                            {\\n                                                \\\"type\\\": \\\"Action.OpenUrl\\\",\\n                                                \\\"title\\\": \\\"Obtain\\\",\\n                                                \\\"url\\\": \\\"https://catalogue.dataspace.copernicus.eu/odata/v1/Assets(40d5c4dd-af39-4505-bda0-e5f710457417)/$value\\\"\\n                                            }\\n                                        ]\\n                                    }\\n                                ],\\n                                \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\",\\n                                \\\"version\\\": \\\"1.1\\\"\\n                            }\\n                        }\\n                    ]\\n                },\\n                {\\n                    \\\"type\\\": \\\"ActionSet\\\",\\n                    \\\"actions\\\": [\\n                        {\\n                            \\\"type\\\": \\\"Action.ShowCard\\\",\\n                            \\\"title\\\": \\\"Item 2\\\",\\n                            \\\"card\\\": {\\n                                \\\"type\\\": \\\"AdaptiveCard\\\",\\n                                \\\"body\\\": [\\n                                    {\\n                                        \\\"type\\\": \\\"Image\\\",\\n                                        \\\"url\\\": \\\"https://example.com/image2.jpg\\\",\\n                                        \\\"altText\\\": \\\"Image 2\\\"\\n                                    },\\n                                    {\\n                                        \\\"type\\\": \\\"TextBlock\\\",\\n                                        \\\"text\\\": \\\"Properties:\\\",\\n                                        \\\"wrap\\\": true,\\n                                        \\\"weight\\\": \\\"Bolder\\\"\\n                                    },\\n                                    {\\n                                        \\\"type\\\": \\\"FactSet\\\",\\n                                        \\\"facts\\\": [\\n                                            { \\\"title\\\": \\\"Timeliness:\\\", \\\"value\\\": \\\"Fast-24h\\\" },\\n                                            { \\\"title\\\": \\\"Coordinates:\\\", \\\"value\\\": \\\"57.785843,20.116644 58.212681,24.484545 56.602947,24.938770 56.182392,20.758526 57.785843,20.116644\\\" },\\n                                            { \\\"title\\\": \\\"Orbit Number:\\\", \\\"value\\\": \\\"26453\\\" },\\n                                            { \\\"title\\\": \\\"Slice Number:\\\", \\\"value\\\": \\\"20\\\" },\\n                                            { \\\"title\\\": \\\"Product Class:\\\", \\\"value\\\": \\\"S\\\" },\\n                                            { \\\"title\\\": \\\"Orbit Direction:\\\", \\\"value\\\": \\\"ASCENDING\\\" },\\n                                            { \\\"title\\\": \\\"Operational Mode:\\\", \\\"value\\\": \\\"IW\\\" },\\n                                            { \\\"title\\\": \\\"Processing Level:\\\", \\\"value\\\": \\\"LEVEL1\\\" },\\n                                            { \\\"title\\\": \\\"Swath Identifier:\\\", \\\"value\\\": \\\"IW1 IW2 IW3\\\" },\\n                                            { \\\"title\\\": \\\"Platform Short Name:\\\", \\\"value\\\": \\\"SENTINEL-1\\\" },\\n                                            { \\\"title\\\": \\\"Instrument Short Name:\\\", \\\"value\\\": \\\"SAR\\\" },\\n                                            { \\\"title\\\": \\\"Relative Orbit Number:\\\", \\\"value\\\": \\\"131\\\" },\\n                                            { \\\"title\\\": \\\"Polarisation Channels:\\\", \\\"value\\\": \\\"VV&VH\\\" }\\n                                        ]\\n                                    },\\n                                    {\\n                                        \\\"type\\\": \\\"ActionSet\\\",\\n                                        \\\"actions\\\": [\\n                                            {\\n                                                \\\"type\\\": \\\"Action.OpenUrl\\\",\\n                                                \\\"title\\\": \\\"Obtain\\\",\\n                                                \\\"url\\\": \\\"https://example.com/image2\\\"\\n                                            }\\n                                        ]\\n                                    }\\n                                ],\\n                                \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\",\\n                                \\\"version\\\": \\\"1.1\\\"\\n                            }\\n                        }\\n                    ]\\n                }\\n            ]\\n        }\\n    ]\\n}\\n\\n\\n\\n\\n\\n\\n\\nsendadaptivecard(JSON.stringify(adaptiveCard));\\n\",\"request\":{\"params\":[{\"key\":\"title\",\"value\":\"Please_use_the_map_to_specify_a_region_y\",\"description\":\"\",\"locked\":false}],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","_map:close":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"sendmessage(\\\"postCommand:map:close\\\");\",\"request\":{\"params\":[],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","_map:open":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"sendmessage(\\\"postCommand:map:open\\\");\",\"request\":{\"params\":[],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","_map:moveto":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"sendmessage(\\\"postCommand:map:moveto:\\\" + location);\",\"request\":{\"params\":[{\"key\":\"location\",\"value\":\"\",\"description\":\"\",\"locked\":false}],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","_map:zoomin":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"sendmessage(\\\"postCommand:zoomin\\\");\",\"request\":{\"params\":[],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","_catalogue:items":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"var resp = httpget(url);\\nsetcontext(\\\"catalogueitemsjson\\\", resp);\\nvar data = JSON.parse(resp);\\nif (!data.features || data.features.length == 0){\\nsendmessage(\\\"No images found\\\");\\n\\n}\\nelse{\\n  var title = \\\"There are \\\"+data.features.length+\\\" images available. \\\\n Select an item to view the image, details, and obtain the product: \\\";\\n// Base structure for the adaptive card\\nconst adaptiveCard = {\\n    \\\"type\\\": \\\"AdaptiveCard\\\",\\n    \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\",\\n    \\\"version\\\": \\\"1.1\\\",\\n    \\\"body\\\": [\\n        {\\n            \\\"type\\\": \\\"TextBlock\\\",\\n            \\\"text\\\": title,\\n            \\\"wrap\\\": true,\\n            \\\"size\\\": \\\"Medium\\\",\\n          \\\"spacing\\\": \\\"ExtraLarge\\\"\\n        },\\n        {\\n            \\\"type\\\": \\\"Container\\\",\\n            \\\"items\\\": []  // This will be filled dynamically with items\\n        }\\n    ]\\n};\\n\\n// Iterate over the data.features array to dynamically create ActionSet blocks for each item\\nfor (var i = 0; i < data.features.length; i++) {\\n    const feature = data.features[i];  // Get each feature in the collection\\n\\n    // Check if the feature has a QUICKLOOK image, otherwise use a default image\\n    const quicklookUrl = feature.assets.QUICKLOOK ? feature.assets.QUICKLOOK.href : \\\"https://example.com/default-image.png\\\";\\n    const obtainUrl = \\\"[Obtain the product](\\\"+feature.assets.PRODUCT.href+\\\")\\\";\\n    const itemid = \\\"Item \\\" + (i+1);\\n    // Create a new ActionSet for each item in the data\\n    const actionSet = {\\n        \\\"type\\\": \\\"ActionSet\\\",\\n        \\\"actions\\\": [\\n            {\\n                \\\"type\\\": \\\"Action.ShowCard\\\",\\n                \\\"title\\\": itemid,  // Use the title from the feature\\n                \\\"card\\\": {\\n                    \\\"type\\\": \\\"AdaptiveCard\\\",\\n                    \\\"body\\\": [\\n                        {\\n                            \\\"type\\\": \\\"Image\\\",\\n                            \\\"url\\\": quicklookUrl,  // Use the quicklook image URL\\n                            \\\"altText\\\": \\\"Quicklook Image\\\"\\n                        },\\n                        {\\n                            \\\"type\\\": \\\"TextBlock\\\",\\n                            \\\"text\\\": \\\"Properties:\\\",\\n                            \\\"wrap\\\": true,\\n                            \\\"weight\\\": \\\"Bolder\\\"\\n                        },\\n                        {\\n                            \\\"type\\\": \\\"FactSet\\\",\\n                            \\\"facts\\\": [\\n                                { \\\"title\\\": \\\"ID\\\", \\\"value\\\": feature.id },\\n                                { \\\"title\\\": \\\"Datetime\\\", \\\"value\\\": feature.properties.datetime },\\n                                { \\\"title\\\": \\\"Product Type\\\", \\\"value\\\": feature.properties.productType },\\n                                { \\\"title\\\": \\\"Orbit Number\\\", \\\"value\\\": feature.properties.orbitNumber },\\n                                { \\\"title\\\": \\\"Platform\\\", \\\"value\\\": feature.properties.platformShortName }\\n                            ]\\n                        },\\n                        {\\n                            \\\"type\\\": \\\"ActionSet\\\",\\n                            \\\"actions\\\": [\\n                                {\\n                                    \\\"type\\\": \\\"Action.OpenUrl\\\",\\n                                    \\\"title\\\": \\\"Obtain the product\\\",\\n                                    \\\"url\\\": feature.assets.PRODUCT.href  // Use the product asset URL\\n                                }\\n                            ]\\n                        }\\n                    ],\\n                    \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\",\\n                    \\\"version\\\": \\\"1.1\\\"\\n                }\\n            }\\n        ]\\n    };\\n\\n    // Add this action set to the body of the main adaptive card\\n    adaptiveCard.body[1].items.push(actionSet);\\n}\\nsetcontext(\\\"adaptivecard\\\",JSON.stringify(adaptiveCard));\\n// Send the dynamically built adaptive card\\nsendadaptivecard(JSON.stringify(adaptiveCard));\\n}\",\"request\":{\"params\":[{\"key\":\"url\",\"value\":\"https://catalogue.dataspace.copernicus.eu/stac/collections/#selected_satellite#/items?bbox=#bbox#&datetime=#date#T00:00:00Z/#date#T23:59:59Z\",\"description\":\"\",\"locked\":true}],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","_map:zoomout":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"sendmessage(\\\"postCommand:zoomout\\\");\",\"request\":{\"params\":[],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","_llmgenerateanswer":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"var answer = \\\"\\\";\\nvar noanswer = false;\\nurl = url + \\\"?q=\\\" + q + \\\"&session_id=\\\" + session_id + \\\"&prompt=\\\" + prompt + \\\"&topic=\\\" + topic + \\\"&config=\\\" + config;\\nvar resp = httpget(url, \\\"\\\", \\\"application/json\\\", 50);\\nsetcontext(\\\"chatresponse\\\", resp);\\n\\n\\nif (resp == \\\"InternalServerError\\\") {\\n  setcontext(\\\"noanswer\\\", true);\\n  answer = error_answer;\\n  noanswer = true;\\n}\\nelse {\\n  setcontext(\\\"noanswer\\\", false);\\n  var jsonRes = JSON.parse(resp);\\n  answer = jsonRes.answer;\\n  if (jsonRes.LLMinput) {\\n      setcontext(\\\"llminput\\\", jsonRes.LLMinput);\\n  }\\n  if (jsonRes.condensed) {\\n      setcontext(\\\"condensed\\\", jsonRes.condensed);\\n  }\\n \\n\\n  setcontext(\\\"plain_answer\\\", answer);\\n  if (answer && answer !== \\\"\\\" && answer.toLowerCase().indexOf(\\\"error\\\") >= 0) {\\n    setcontext(\\\"noanswer\\\", true);\\n    answer = error_answer;\\n    noanswer= true;\\n  } \\n  else if (answer && answer !== \\\"\\\" && (answer.toLowerCase().indexOf(\\\"nezinu\\\") >= 0 || answer.toLowerCase().indexOf(\\\"context does not\\\") >= 0 || answer.toLowerCase().indexOf(\\\"kontekstā nav\\\") >= 0)) {\\n    setcontext(\\\"noanswer\\\", true);\\n    answer = no_answer;\\n    noanswer = true;\\n} else if (answer && answer !== \\\"\\\" && (answer.toLowerCase().indexOf(\\\"do not know\\\") >= 0 || answer.toLowerCase().indexOf(\\\"don’t know\\\") >= 0)) {\\n  setcontext(\\\"noanswer\\\", true);\\n  answer = no_answer;\\n  noanswer = true;\\n} else {    \\n  var metadatajson = \\\"\\\";\\n    if (jsonRes.metadata) {\\n     setcontext(\\\"metadata\\\", JSON.stringify(metadatajson));\\n      var metadatajson = jsonRes.metadata;\\n   }\\n    if (metadatajson && metadatajson.length > 0 && answer.toLowerCase().indexOf(\\\"http\\\") == -1) {\\n      let readmoretxt = \\\"\\\";\\n      let documents = {};\\n\\n      // Collecting pages for each document\\n     for (const key in metadatajson) {\\n        const data = metadatajson[key];\\n        if (!data.Url && data.URL) {\\n          data.Url = data.URL;\\n         }\\n        if (data.H1 && data.Url) {\\n          // Handle PDF and non-PDF URLs separately\\n          if (data.pg && data.Url.indexOf(\\\".pdf\\\") !== -1) {\\n            // If it's a PDF and has page number\\n            const docKey = data.H1 + \\\"|\\\" + data.Url;\\n            if (!documents[docKey]) {\\n              documents[docKey] = [];\\n            }\\n            documents[docKey].push(Number(data.pg) + 1);\\n          } else if (data.Url.indexOf(\\\".pdf\\\") === -1 && readmoretxt.indexOf(data.H1) === -1) {\\n            // If it's not a PDF, add directly to readmoretxt\\n            readmoretxt += \\\"\\\\n [\\\" + data.H1 + \\\"](\\\" + data.Url + \\\")\\\";\\n          }\\n        }\\n      }\\n\\n      // Building the readmoretxt with pages and link for PDFs\\n      for (const docKey in documents) {\\n          const pages = documents[docKey];\\n          const docKeyParts = docKey.split(\\\"|\\\");\\n          const H1 = docKeyParts[0];\\n          const Url = docKeyParts[1];\\n\\n        if (pages.length > 0) {\\n              // Removing duplicates and sorting pages\\n              const uniquePagesArray = [];\\n              for (let i = 0; i < pages.length; i++) {\\n                  if (uniquePagesArray.indexOf(pages[i]) === -1) {\\n                      uniquePagesArray.push(pages[i]);\\n                  }\\n              }\\n\\n              // Sorting manually\\n             for (let i = 0; i < uniquePagesArray.length - 1; i++) {\\n                  for (let j = i + 1; j < uniquePagesArray.length; j++) {\\n                      if (uniquePagesArray[i] > uniquePagesArray[j]) {\\n                          let temp = uniquePagesArray[i];\\n                          uniquePagesArray[i] = uniquePagesArray[j];\\n                          uniquePagesArray[j] = temp;\\n                      }\\n                  }\\n              }\\n\\n              const uniquePages = uniquePagesArray.join(\\\", \\\");\\n              readmoretxt += \\\" \\\\n [\\\" + H1 + \\\"](\\\" + Url + \\\"#page=\\\" + pages[0] + \\\") (pages: \\\" + uniquePages + \\\")\\\";\\n          }\\n      }\\n\\n      if (readmoretxt !== \\\"\\\") {\\n          answer += \\\"\\\\n*** \\\\n\\\\n\\\" + read_more + \\\"  \\\" + readmoretxt;\\n      }\\n  }\\n}\\n}\\nconst adaptiveCard = {\\n    \\\"type\\\": \\\"AdaptiveCard\\\",\\n  \\\"speak\\\": answer,\\n    \\\"body\\\": [\\n        {\\n            \\\"type\\\": \\\"TextBlock\\\",\\n            \\\"text\\\":answer ,\\n            \\\"wrap\\\": true,\\n            \\\"spacing\\\": \\\"ExtraLarge\\\",\\n            \\\"separator\\\": true\\n        },\\n        {\\n            \\\"type\\\": \\\"TextBlock\\\",\\n          \\\"spacing\\\": \\\"ExtraLarge\\\",\\n            \\\"text\\\": subtext,\\n            \\\"wrap\\\": true,\\n            \\\"style\\\": \\\"default\\\",\\n            \\\"fontType\\\": \\\"Default\\\",\\n            \\\"size\\\": \\\"Small\\\",\\n            \\\"weight\\\": \\\"Lighter\\\",\\n            \\\"color\\\": \\\"default\\\",\\n            \\\"isSubtle\\\": false,\\n            \\\"horizontalAlignment\\\": \\\"Right\\\"\\n        }\\n    ],\\n    \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\",\\n    \\\"version\\\": \\\"1.0\\\"\\n}\\nif ((noanswer && show_no_answer && show_no_answer == \\\"true\\\") || noanswer == false ){\\n\\n\\tsendadaptivecard(JSON.stringify(adaptiveCard));\\n}\\n\",\"request\":{\"params\":[{\"key\":\"no_answer\",\"value\":\"system_text_no_answer\",\"description\":\"Output text when VA doesn't have an answer.\",\"locked\":true},{\"key\":\"error_answer\",\"value\":\"system_text_error_answer\",\"description\":\"Output text when VA fails to answer.\",\"locked\":true},{\"key\":\"read_more\",\"value\":\"system_text_read_more\",\"description\":\"Output text \\\"Read more\\\".\",\"locked\":true},{\"key\":\"url\",\"value\":\"{{{llmurl}}}/chat\",\"description\":\"\",\"locked\":true},{\"key\":\"prompt\",\"value\":\"system_text_prompt\",\"description\":\"\",\"locked\":true},{\"key\":\"q\",\"value\":\"#@@input\",\"description\":\"\",\"locked\":true},{\"key\":\"session_id\",\"value\":\"#@@conversationid\",\"description\":\"\",\"locked\":true},{\"key\":\"topic\",\"value\":\"{{{azurename}}}\",\"description\":\"\",\"locked\":true},{\"key\":\"config\",\"value\":\"#@@llmconfig\",\"description\":\"\",\"locked\":true},{\"key\":\"show_no_answer\",\"value\":\"\",\"description\":\"\",\"locked\":false},{\"key\":\"subtext\",\"value\":\"The_answer_has_been_prepared_automatical\",\"description\":\"\",\"locked\":true}],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"},{\"key\":\"answer\",\"value\":\"\",\"description\":\"Response generated by the AI.\"}]}","_cs:SubmitUserRequest":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"var geojson = getcontext(polygon);\\nvar geojson = JSON.parse(geojson);\\nconst feature = geojson.features[0];\\nconst coordinates = feature.geometry.coordinates[0];\\nvar bboxArray = bbox.split(\\\",\\\").map(Number);\\nconst now = new Date();\\nconst formattedDateNow = now.toISOString();\\n    \\nlet formobj={\\n    \\\"externalId\\\": null,\\n    \\\"status\\\": status,\\n    \\\"aoi\\\": {\\n        \\\"type\\\": \\\"Polygon\\\",\\n        \\\"coordinates\\\":[coordinates],\\n        \\\"bbox\\\": bboxArray\\n    },\\n    \\\"validity\\\": {\\n        \\\"begin\\\": validity_begin,\\n        \\\"end\\\": validity_end\\n    },\\n    \\\"priority\\\": priority,\\n    \\\"userRequestMissionParameters\\\": [\\n        {\\n            \\\"constellation\\\": constellation,\\n            \\\"satellites\\\":  satellites.split(\\\", \\\").map(String)  ,\\n            \\\"downloadStations\\\":  urMissionParams_downloadStations.split(\\\", \\\").map(String) ,\\n            \\\"cloudCoverNotationMode\\\": urMissionParams_cloudCoverNotationMode,\\n            \\\"clearSkyRejectionSelectionThreshold\\\": urMissionParams_clearSkyRejectionSelectionThreshold,\\n            \\\"clearSkyRejectionValidationThreshold\\\": urMissionParams_clearSkyRejectionValidationThreshold,\\n            \\\"priority\\\": urMissionParams_priority,\\n            \\\"cap\\\": urMissionParams_cap,\\n            \\\"monopass\\\": urMissionParams_monopass,\\n            \\\"acquisitionMode\\\": urMissionParams_acquisitionMode,\\n            \\\"angularConstraintsType\\\": urMissionParams_angularConstraintsType,\\n            \\\"bhMin\\\": urMissionParams_bhMin,\\n            \\\"bhMax\\\": urMissionParams_bhMax,\\n            \\\"psiXMin\\\": urMissionParams_psiXMin,\\n            \\\"psiXMax\\\": urMissionParams_psiXMax,\\n            \\\"psiYMin\\\": urMissionParams_psiYMin,\\n            \\\"psiYMax\\\": urMissionParams_psiYMax,\\n            \\\"psiXYMax\\\": urMissionParams_psiXYMax\\n        }\\n    ],\\n    \\\"programmingRequests\\\": [\\n        {\\n            \\\"externalId\\\": programmingRequests_externalId,\\n            \\\"constellation\\\": constellation,\\n            \\\"priority\\\": programmingRequests_priority,\\n            \\\"status\\\": programmingRequests_status,\\n            \\\"validity\\\": {\\n                \\\"begin\\\": programmingRequests_validity_begin,\\n                \\\"end\\\": programmingRequests_validity_end\\n            },\\n            \\\"activationDate\\\": formattedDateNow,\\n            \\\"aoi\\\": {\\n                \\\"type\\\": \\\"MultiPolygon\\\",\\n                \\\"coordinates\\\":[[coordinates]],\\n                \\\"bbox\\\": bboxArray\\n            },\\n            \\\"remainingToAcquire\\\": {\\n                \\\"type\\\": \\\"MultiPolygon\\\",\\n                \\\"coordinates\\\":[[coordinates]],\\n                \\\"bbox\\\": bboxArray\\n            },\\n            \\\"satellites\\\": satellites.split(\\\", \\\").map(String),\\n            \\\"scoringParameters\\\": {\\n                \\\"areaWeightingFlag\\\": true,\\n                \\\"coreWeightingFlag\\\": true,\\n                \\\"catalogWeightingFlag\\\": true,\\n                \\\"weatherWeightingFlag\\\": true,\\n                \\\"clearSkyRejectionThreshold\\\": 0,\\n                \\\"clearSkyBonusThreshold\\\": 0,\\n                \\\"missionParameters\\\": {}\\n            },\\n            \\\"splitParameters\\\": {\\n                \\\"method\\\": \\\"WORLD_LAYERED_SPLIT\\\",\\n                \\\"maxMeshLength\\\": 0,\\n                \\\"cap\\\": 0,\\n                \\\"overlapMarginAlongTrack\\\": 0,\\n                \\\"overlapMarginAcrossTrack\\\": 0,\\n                \\\"missionParameters\\\": {}\\n            },\\n            \\\"acquisitionParameters\\\": {\\n                \\\"acquisitionType\\\": \\\"string\\\",\\n                \\\"mode\\\": \\\"MONOSCOPIC\\\",\\n                \\\"monopass\\\": true,\\n                \\\"stereoType\\\": \\\"QUASI_SYMETRICAL\\\",\\n                \\\"luminosityThreshold\\\": 0,\\n                \\\"orbitalPhase\\\": \\\"DAY\\\",\\n                \\\"guidanceMode\\\": \\\"string\\\",\\n                \\\"nUpletAcquisitionsNumber\\\": 0,\\n                \\\"missionParameters\\\": {}\\n            },\\n            \\\"angularConstraints\\\": {\\n                \\\"angularConstraintsType\\\": \\\"INCIDENCE\\\",\\n                \\\"minAzimuthAngle\\\": 0,\\n                \\\"maxAzimuthAngle\\\": 0,\\n                \\\"maxGroundAngle\\\": 0,\\n                \\\"missionParameters\\\": {}\\n            },\\n            \\\"downloadParameters\\\": {\\n                \\\"downloadBranches\\\": [\\n                    {\\n                        \\\"inventoryCenter\\\": \\\"string\\\",\\n                        \\\"stations\\\": [\\n                            \\\"string\\\"\\n                        ],\\n                        \\\"validating\\\": true,\\n                        \\\"missionParameters\\\": {}\\n                    }\\n                ],\\n                \\\"missionParameters\\\": {}\\n            },\\n            \\\"initialCoverageCompletion\\\": [\\n                {\\n                    \\\"simulationYear\\\": 0,\\n                    \\\"completed\\\": true,\\n                    \\\"completionDate\\\": formattedDateNow,\\n                    \\\"progressAtDate\\\": 0,\\n                    \\\"progress\\\": [\\n                        {\\n                            \\\"date\\\": formattedDateNow,\\n                            \\\"progress\\\": 0\\n                        }\\n                    ]\\n                }\\n            ],\\n            \\\"latestCoverageCompletion\\\": [\\n                {\\n                    \\\"simulationYear\\\": 0,\\n                    \\\"completed\\\": true,\\n                    \\\"completionDate\\\": formattedDateNow,\\n                    \\\"progressAtDate\\\": 0,\\n                    \\\"progress\\\": [\\n                        {\\n                            \\\"date\\\": formattedDateNow,\\n                            \\\"progress\\\": 0\\n                        }\\n                    ]\\n                }\\n            ],\\n            \\\"missionParameters\\\": {},\\n            \\\"acquisitions\\\": [\\n                {\\n                    \\\"externalId\\\": \\\"ACQR_123_456_789\\\",\\n                    \\\"status\\\": \\\"ACTIVATED\\\",\\n                    \\\"datedDtos\\\": [\\n                        {\\n                            \\\"guid\\\": \\\"string\\\",\\n                            \\\"satellite\\\": \\\"string\\\",\\n                            \\\"orbitalDirection\\\": \\\"ASCENDING\\\",\\n                            \\\"accessRoll\\\": 0,\\n                            \\\"orbitNumber\\\": 0,\\n                            \\\"psoStart\\\": {\\n                                \\\"pso\\\": {\\n                                    \\\"orbitNumber\\\": 0,\\n                                    \\\"durationFromStart\\\": 0\\n                                }\\n                            },\\n                            \\\"psoMiddle\\\": {\\n                                \\\"pso\\\": {\\n                                    \\\"orbitNumber\\\": 0,\\n                                    \\\"durationFromStart\\\": 0\\n                                }\\n                            },\\n                            \\\"psoEnd\\\": {\\n                                \\\"pso\\\": {\\n                                    \\\"orbitNumber\\\": 0,\\n                                    \\\"durationFromStart\\\": 0\\n                                }\\n                            },\\n                            \\\"missionParameters\\\": {},\\n                            \\\"externalId\\\": \\\"PROGR_123_456\\\",\\n                            \\\"priority\\\": \\\"NONE\\\",\\n                            \\\"period\\\": {\\n                                \\\"begin\\\": formattedDateNow,\\n                                \\\"end\\\": formattedDateNow\\n                            },\\n                            \\\"orbitCycleNumber\\\": 0,\\n                            \\\"solarElevationAngle\\\": 0\\n                        }\\n                    ],\\n                    \\\"meshes\\\": [\\n                        {\\n                            \\\"guid\\\": \\\"string\\\",\\n                            \\\"aoi\\\": {\\n                                  \\\"type\\\": \\\"Polygon\\\",\\n                                  \\\"coordinates\\\":[coordinates],\\n                                  \\\"bbox\\\": bboxArray\\n                              },\\n                            \\\"meanAcquisitionDuration\\\": 0,\\n                            \\\"usefulArea\\\": 0,\\n                            \\\"gridCellIds\\\": [\\n                                \\\"string\\\"\\n                            ],\\n                            \\\"missionParameters\\\": {}\\n                        }\\n                    ],\\n                    \\\"missionParameters\\\": {}\\n                }\\n            ]\\n        }\\n    ]\\n};\\nvar formStr = JSON.stringify(formobj);\\nsetcontext(\\\"xxx\\\", formStr);\\nvar resp = httppost(url, formStr, \\\"application/json\\\",5);\\nvar respJSON = JSON.parse(resp);\\nconst adaptiveCard = {\\n    \\\"type\\\": \\\"AdaptiveCard\\\",\\n    \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\",\\n    \\\"version\\\": \\\"1.1\\\",\\n    \\\"body\\\": [\\n        {\\n            \\\"type\\\": \\\"TextBlock\\\",\\n            \\\"text\\\": \\\"A new programming request has been successfully created!\\\",\\n            \\\"wrap\\\": true,\\n            \\\"size\\\": \\\"Medium\\\"\\n        },\\n        {\\n            \\\"type\\\": \\\"TextBlock\\\",\\n            \\\"text\\\": \\\"Status: \\\" + respJSON.status,\\n            \\\"wrap\\\": true,\\n            \\\"size\\\": \\\"Medium\\\"\\n        },\\n        {\\n            \\\"type\\\": \\\"TextBlock\\\",\\n            \\\"text\\\": \\\"ID: \\\" + respJSON.externalId,\\n            \\\"wrap\\\": true,\\n            \\\"size\\\": \\\"Medium\\\"\\n        },\\n        {\\n            \\\"type\\\": \\\"Container\\\",\\n            \\\"items\\\": [\\n                {\\n                    \\\"type\\\": \\\"ActionSet\\\",\\n                    \\\"actions\\\": [\\n                        {\\n                            \\\"type\\\": \\\"Action.ShowCard\\\",\\n                            \\\"title\\\": \\\"Response JSON\\\",\\n                            \\\"card\\\": {\\n                                \\\"type\\\": \\\"AdaptiveCard\\\",\\n                                \\\"body\\\": [                                    \\n                                    {\\n                                        \\\"type\\\": \\\"TextBlock\\\",\\n                                        \\\"text\\\": resp,\\n                                        \\\"wrap\\\": true,\\n                                        \\\"weight\\\": \\\"Lighter\\\"\\n                                    }\\n                                ],\\n                                \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\",\\n                                \\\"version\\\": \\\"1.1\\\"\\n                            }\\n                        }\\n                    ]\\n                }\\n            ]\\n        }\\n    ]\\n};\\nsendadaptivecard(JSON.stringify(adaptiveCard));\",\"request\":{\"params\":[{\"key\":\"url\",\"value\":\"http://dominocs.dominocs.svc.cluster.local/user-requests\",\"description\":\"Coverage service url to submit the given user request \",\"locked\":true},{\"key\":\"externalId\",\"value\":\"VAS\",\"description\":\"Extern ID Empty for internal user request, string ^[A-Za-z0-9 !\\\\\\\"#$%&'*+,-./:;<=>?@^_`(|)~]{1,500}$\",\"locked\":true},{\"key\":\"status\",\"value\":\"CREATED\",\"description\":\"Enum: \\\"CREATED\\\" \\\"ANALYZED\\\" \\\"ACTIVATED\\\" \\\"COMPLETED\\\" \\\"CANCELLED\\\" The User request status\",\"locked\":true},{\"key\":\"polygon\",\"value\":\"polygon\",\"description\":\"Geographical surface in GeoJSON format\",\"locked\":true},{\"key\":\"bbox\",\"value\":\"#bbox\",\"description\":\"Array of numbers >= 4 items\",\"locked\":true},{\"key\":\"validity_begin\",\"value\":\"2025-01-03T17:58:45.123Z\",\"description\":\"The user request validity period. The start period with the following format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",\"locked\":true},{\"key\":\"validity_end\",\"value\":\"2025-01-03T17:58:45.123Z\",\"description\":\"The user request validity period. The end period with the following format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",\"locked\":true},{\"key\":\"priority\",\"value\":\"0\",\"description\":\"The user request priority\",\"locked\":true},{\"key\":\"constellation\",\"value\":\"Sentinel-2\",\"description\":\"The constellation\",\"locked\":true},{\"key\":\"satellites\",\"value\":\"Sentinel-2A, Sentinel-2B\",\"description\":\"The list of Satellites\",\"locked\":true},{\"key\":\"urMissionParams_downloadStations\",\"value\":\"Kiruna, Matera, Svalbard, Troll\",\"description\":\"The list of download stations (acronym)\",\"locked\":true},{\"key\":\"urMissionParams_cloudCoverNotationMode\",\"value\":\"AUTOMATIC\",\"description\":\"Enum: \\\"MANUAL\\\" \\\"AUTOMATIC\\\" Cloud cover notation mode\",\"locked\":true},{\"key\":\"urMissionParams_clearSkyRejectionSelectionThreshold\",\"value\":\"50\",\"description\":\"minimum forecast clear sky percentage for programming the request (in %)\",\"locked\":true},{\"key\":\"urMissionParams_clearSkyRejectionValidationThreshold\",\"value\":\"50\",\"description\":\"minimum forecast clear sky percentage for programming the request (in %)\",\"locked\":true},{\"key\":\"urMissionParams_priority\",\"value\":\"1\",\"description\":\"[ 1 .. 16 ] Describe the priority of the programming request. 1 is the greatest priority\",\"locked\":true},{\"key\":\"urMissionParams_cap\",\"value\":\"30\",\"description\":\"Acquisition cap in degree\",\"locked\":true},{\"key\":\"urMissionParams_monopass\",\"value\":\"true\",\"description\":\"Indicates if the ProgR is monopass.\",\"locked\":true},{\"key\":\"urMissionParams_acquisitionMode\",\"value\":\"MONOSCOPIC\",\"description\":\"Enum: \\\"MONOSCOPIC\\\" \\\"STEREO\\\" \\\"TRISTEREO\\\" \\\"N_UPLET\\\" programming order acquisition mode\",\"locked\":true},{\"key\":\"urMissionParams_angularConstraintsType\",\"value\":\"DEPOINTING\",\"description\":\"Value: \\\"DEPOINTING\\\" Angular constraints type\",\"locked\":true},{\"key\":\"urMissionParams_bhMin\",\"value\":\"0\",\"description\":\"Minimum B/H, in case of stereo or tristereo acquisition mode only.\",\"locked\":true},{\"key\":\"urMissionParams_bhMax\",\"value\":\"0\",\"description\":\"Maximum B/H, in case of stereo or tristereo acquisition mode only.\",\"locked\":true},{\"key\":\"urMissionParams_psiXMin\",\"value\":\"0\",\"description\":\"Max Roll. In the case of stereo or tri-stereo with STEREO_TYPE set to FORWARD_BACKWARD this parameter concerns the 'forward' acquisition.\",\"locked\":true},{\"key\":\"urMissionParams_psiXMax\",\"value\":\"0\",\"description\":\"Max Roll. In the case of stereo or tri-stereo with STEREO_TYPE set to FORWARD_BACKWARD this parameter concerns the 'forward' acquisition.\",\"locked\":true},{\"key\":\"urMissionParams_psiYMin\",\"value\":\"0\",\"description\":\"Min Pitch. In the case of stereo or tri-stereo with STEREO_TYPE set to FORWARD_BACKWARD this parameter concerns the 'forward' acquisition.\",\"locked\":true},{\"key\":\"urMissionParams_psiYMax\",\"value\":\"0\",\"description\":\"Max Pitch. In the case of stereo or tri-stereo with STEREO_TYPE set to FORWARD_BACKWARD this parameter concerns the 'forward' acquisition.\",\"locked\":true},{\"key\":\"urMissionParams_psiXYMax\",\"value\":\"0\",\"description\":\"Max RollPitch. In the case of stereo or tri-stereo this parameter concerns both 'forward' and 'backward' acquisitions.\",\"locked\":true},{\"key\":\"programmingRequests_externalId\",\"value\":\"VAS_01_01\",\"description\":\"The programming request mission chain ExternalId Pattern : PROGR_id_id\",\"locked\":true},{\"key\":\"programmingRequests_priority\",\"value\":\"1\",\"description\":\"Describe the priority of the programming request. 1 is the greatest priority\",\"locked\":true},{\"key\":\"programmingRequests_status\",\"value\":\"ACTIVATED\",\"description\":\"Enum: \\\"ACTIVATED\\\" \\\"CANCELLED\\\" \\\"EXPIRED\\\" \\\"COMPLETED\\\" Programming request status\",\"locked\":true},{\"key\":\"programmingRequests_validity_begin\",\"value\":\"2025-01-03T17:58:45.123Z\",\"description\":\"The user request validity period. The start period with the following format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",\"locked\":true},{\"key\":\"programmingRequests_validity_end\",\"value\":\"2025-01-03T17:58:45.123Z\",\"description\":\"The user request validity period. The end period with the following format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",\"locked\":true}],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","sendadaptivecardmap":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"const adaptiveCard = {\\n  \\\"type\\\": \\\"AdaptiveCard\\\",\\n  \\\"version\\\": \\\"1.1\\\",\\n  \\\"body\\\": [\\n      {\\n          \\\"type\\\": \\\"TextBlock\\\",\\n          \\\"text\\\": title,\\n          \\\"wrap\\\": true\\n        },\\n    {\\n      \\\"type\\\": \\\"Container\\\",\\n      \\\"id\\\": \\\"map\\\",\\n      \\\"minHeight\\\": \\\"600px\\\",\\n      \\\"items\\\": [\\n        {\\n          \\\"type\\\": \\\"TextBlock\\\",\\n          \\\"text\\\": \\\" \\\",\\n          \\\"wrap\\\": true\\n        }\\n      ]\\n    }\\n  ]\\n}\\n\\nsendadaptivecard(JSON.stringify(adaptiveCard));\\n\",\"request\":{\"params\":[{\"key\":\"title\",\"value\":\"Please_use_the_map_to_specify_a_region_y\",\"description\":\"\",\"locked\":false}],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","_map:drawBbox":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"var geojson = getcontext(polygon);\\nvar geojson = JSON.parse(geojson);\\nlet minLon = Infinity;\\n  let minLat = Infinity;\\n  let maxLon = -Infinity;\\n  let maxLat = -Infinity;\\n\\n  for (let i = 0; i < geojson.features.length; i++) {\\n    const feature = geojson.features[i];\\n    const coordinates = feature.geometry.coordinates[0]; // Assuming a single polygon\\n  for (let j = 0; j < coordinates.length; j++) {\\n    const point = coordinates[j]; // Access the current coordinate pair\\n    const lon = point[0];         // Extract longitude\\n    const lat = point[1];         // Extract latitude\\n    \\n    if (lon < minLon) minLon = lon;\\n    if (lat < minLat) minLat = lat;\\n    if (lon > maxLon) maxLon = lon;\\n    if (lat > maxLat) maxLat = lat;\\n}\\n}\\nvar bbox = minLon+\\\", \\\"+minLat+\\\", \\\"+maxLon+\\\", \\\"+maxLat;\\nsetcontext(\\\"bbox\\\",  bbox)\\nsendmessage(\\\"postCommand:map:drawBbox:[\\\" +  bbox + \\\"]\\\");\",\"request\":{\"params\":[{\"key\":\"polygon\",\"value\":\"polygon\",\"description\":\"\",\"locked\":true}],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","_map:drawPolygon":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"var geojson = getcontext(polygon);\\nsendmessage(\\\"postCommand:map:drawPolygon:\\\" + geojson);\",\"request\":{\"params\":[{\"key\":\"polygon\",\"value\":\"polygon\",\"description\":\"\",\"locked\":true}],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","_catalogue:collections":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"var resp = httpget(url);\\nvar data = JSON.parse(resp);\\nconst satellites = [];\\n\\n// Iterate over the collections array using a for loop\\nfor (let i = 0; i < data.collections.length; i++) {\\n  const collection = data.collections[i];\\nsetcontext(\\\"satellites[\\\"+i+\\\"]\\\", collection.title);\\n\\n}\\n\",\"request\":{\"params\":[{\"key\":\"url\",\"value\":\"https://catalogue.dataspace.copernicus.eu/stac/collections\",\"description\":\"\",\"locked\":true}],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","_cs:health":"{\"method\":\"get\",\"url\":\"http://dominocs.dominocs.svc.cluster.local/health\",\"detach\":false,\"body\":\"\",\"request\":{\"params\":[],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"text\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"},{\"key\":\"res\",\"value\":\".\",\"description\":\"\"}]}","preprocessInput":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"var input = getcontext(\\\"@@input\\\");\\nif (!input || input.length === 0) {\\n    return input;\\n}\\nif(input.toLowerCase().indexOf(\\\"postback:\\\") >= 0){\\n   return input;\\n}\\nvar prompt = \\\">>>You are an intelligent system capable of detecting and extracting address details from user-provided text. Your task is to identify any address mentioned and return it as a single `address` field containing the entire address in a structured format. If no address is detected, respond with `No address detected.` \\\\\\n \\\\\\nExamples:  \\\\\\n1. User Input: 'I live at 123 Main Street, Springfield, IL 62704.'  \\\\\\n   Output: { \\\\\\\"address\\\\\\\": \\\\\\\"123 Main Street, Springfield, IL 62704\\\\\\\" } \\\\\\n \\\\\\n2. User Input: 'Send it to my office at 456 Elm St, Apt 3B, New York, NY 10001.'  \\\\\\n   Output: { \\\\\\\"address\\\\\\\": \\\\\\\"456 Elm St, Apt 3B, New York, NY 10001\\\\\\\" }  \\\\\\n \\\\\\n3. User Input: 'Meet me at the Eiffel Tower in Paris, France.'  \\\\\\n   Output: { \\\\\\\"address\\\\\\\": \\\\\\\"Eiffel Tower, Paris, France\\\\\\\" }  \\\\\\n \\\\\\n4. User Input: 'Can you find me a place near Central Park?'  \\\\\\n   Output: { \\\\\\\"address\\\\\\\": \\\\\\\"Central Park\\\\\\\" }  \\\\\\n \\\\\\n5. User Input: 'I need a venue near the beach.'  \\\\\\n   Output: { \\\\\\\"address\\\\\\\": \\\\\\\"No address detected.\\\\\\\" } \\\\\\n \\\\\\n6. User Input: 'Mail it to 789 Broadway, San Diego.'  \\\\\\n   Output: { \\\\\\\"address\\\\\\\": \\\\\\\"789 Broadway, San Diego\\\\\\\" }  \\\\\\n \\\\\\n7. User Input: 'I want to find Paris.'  \\\\\\n   Output: { \\\\\\\"address\\\\\\\": \\\\\\\"Paris\\\\\\\" }  \\\\\\n \\\\\\nGuidelines:  \\\\\\n- If an address is partially mentioned, return the available details as a single string.  \\\\\\n- Normalize and format the address appropriately in the `address` attribute.  \\\\\\n- Include landmarks or notable references in the `address` if mentioned.  \\\\\\n- Ignore non-address information and avoid guessing details not provided. \\\\\\n- Return the result as JSON in the following format: \\\\\\n{\\\\\\\"address\\\\\\\": \\\\\\\"detected address\\\\\\\"}\\\";\\n\\nvar formObj = { 'q': input, 'prompt': prompt };\\nvar formStr = JSON.stringify(formObj);\\nvar resp = httppost(url, formStr, \\\"application/JSON\\\", 20);\\nsetcontext(\\\"executepromptanswer\\\", resp);\\n\\nif (resp && resp !== \\\"\\\" && resp.toLowerCase().indexOf(\\\"error:\\\") !== 0 && resp.toLowerCase().indexOf(\\\"no address\\\") < 0) {\\n    try {\\n      resp = resp.replace(/^```json\\\\s*/, \\\"\\\").replace(/```$/, \\\"\\\").trim();\\n\\n        var resObj = JSON.parse(resp);\\n        if (resObj && resObj.address) {         \\n          setcontext(\\\"address\\\", resObj.address);     \\n          //sendmessage(resObj.address);\\n        }\\n        if (resObj && resObj.radius) {         \\n          setcontext(\\\"radius\\\", resObj.radius);      \\n          //sendmessage(resObj.radius)\\n        }\\n    } catch (error) {\\n  \\n    }\\n}\\n\\nreturn input;\\n\",\"request\":{\"params\":[{\"key\":\"url\",\"value\":\"{{{llmurl}}}/executeprompt?config=#@@llmconfig#\",\"description\":\"\",\"locked\":true}],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","sendadaptivecarddate":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"const adaptiveCard ={\\n    \\\"type\\\": \\\"AdaptiveCard\\\",\\n    \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\",\\n    \\\"version\\\": \\\"1.0\\\",\\n    \\\"body\\\": [\\n        {\\n            \\\"type\\\": \\\"TextBlock\\\",\\n            \\\"text\\\": \\\"${title}\\\",\\n            \\\"wrap\\\": true,\\n            \\\"style\\\": \\\"heading\\\"\\n        },\\n        {\\n            \\\"type\\\": \\\"FactSet\\\",\\n            \\\"facts\\\": [\\n                {\\n                    \\\"title\\\": \\\"Name\\\",\\n                    \\\"value\\\": \\\"${customer[0].firstName} ${customer[0].lastName}\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Phone number\\\",\\n                    \\\"value\\\": \\\"${customer[0].phone}\\\"\\n                }\\n            ]\\n        },\\n        {\\n            \\\"type\\\": \\\"Container\\\",\\n            \\\"items\\\": [\\n                {\\n                    \\\"type\\\": \\\"FactSet\\\",\\n                    \\\"facts\\\": [\\n                        {\\n                            \\\"title\\\": \\\"1x\\\",\\n                            \\\"value\\\": \\\"Steak\\\"\\n                        },\\n                        {\\n                            \\\"title\\\": \\\"2x\\\",\\n                            \\\"value\\\": \\\"Side Rice\\\"\\n                        },\\n                        {\\n                            \\\"title\\\": \\\"1x\\\",\\n                            \\\"value\\\": \\\"Soft Drink\\\"\\n                        }\\n                    ],\\n                    \\\"spacing\\\": \\\"small\\\"\\n                }\\n            ],\\n            \\\"spacing\\\": \\\"small\\\"\\n        }\\n    ],\\n    \\\"actions\\\": [\\n        {\\n            \\\"type\\\": \\\"Action.Execute\\\",\\n            \\\"title\\\": \\\"Place Order\\\"\\n        },\\n        {\\n            \\\"type\\\": \\\"Action.Execute\\\",\\n            \\\"title\\\": \\\"Edit Order\\\",\\n            \\\"data\\\": \\\"edit\\\",\\n            \\\"mode\\\": \\\"secondary\\\"\\n        },\\n        {\\n            \\\"type\\\": \\\"Action.Execute\\\",\\n            \\\"title\\\": \\\"Save Order\\\",\\n            \\\"data\\\": \\\"save\\\",\\n            \\\"mode\\\": \\\"secondary\\\"\\n        }\\n    ]\\n}\\n\\n\\n\\n\\nsendadaptivecard(JSON.stringify(adaptiveCard));\\n\",\"request\":{\"params\":[{\"key\":\"title\",\"value\":\"Please_use_the_map_to_specify_a_region_y\",\"description\":\"\",\"locked\":false}],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"}]}","_cs:getconstellationsJSON":"{\"method\":\"js\",\"url\":\"\",\"detach\":false,\"body\":\"var resp = httpget(url);\\nsetcontext(\\\"constellationsjson\\\", resp);\\nvar data = JSON.parse(resp);\\n\\nfor (let i = 0; i < data.constellations.length; i++) {\\n  const constellation = data.constellations[i];\\n  setcontext(\\\"constellations[\\\"+i+\\\"]\\\", constellation.constellation);\\n}\",\"request\":{\"params\":[{\"key\":\"url\",\"value\":\"#@@media#../staging/constellations.json\",\"description\":\"\",\"locked\":true}],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"json\",\"response\":[{\"key\":\"status\",\"value\":\"StatusCode\",\"description\":\"status code\"},{\"key\":\"res\",\"value\":\"$\",\"description\":\"\"}]}","stream":"{\"method\":\"get\",\"url\":\"{{{llmurl}}}/chatstream\",\"detach\":false,\"body\":\"\",\"request\":{\"params\":[{\"key\":\"q\",\"value\":\"#@@input\",\"description\":\"\",\"locked\":true},{\"key\":\"topic\",\"value\":\"{{{azurename}}}\",\"description\":\"\",\"locked\":true},{\"key\":\"session_id\",\"value\":\"#@@conversationid\",\"description\":\"\",\"locked\":true},{\"key\":\"config\",\"value\":\"#@@llmconfig\",\"description\":\"\",\"locked\":true}],\"authorization\":[\"\"],\"headers\":[],\"formData\":[]},\"responseType\":\"ndjson\",\"response\":[{\"key\":\"response\",\"value\":\"response\",\"description\":\"\"}]}"}